<?xml version="1.0"?>
<svg xmlns="http://www.w3.org/2000/svg" height="512px" viewBox="0 0 64 64" width="512px"><g><script xmlns="" id="metastreaminitscript" class="active-path" style="">(function() {
    document.getElementById('metastreaminitscript').remove()

    const INIT_TIMEOUT = 5e3
    const isFirefox = navigator.userAgent.toLowerCase().includes('firefox')

    //=========================================================================
    // document.createElement proxy
    //=========================================================================

    window.__metastreamMediaElements = new Set()

    // Proxy document.createElement to trap media elements created in-memory
    const origCreateElement = document.createElement
    const proxyCreateElement = function() {
      const element = origCreateElement.apply(document, arguments)
      if (window.__metastreamMediaElements &amp;&amp; element instanceof HTMLMediaElement) {
        window.__metastreamMediaElements.add(element)
      }
      return element
    }
    proxyCreateElement.toString = origCreateElement.toString.bind(origCreateElement)
    document.createElement = proxyCreateElement

    setTimeout(() =&gt; {
      if (window.__metastreamMediaElements) {
        window.__metastreamMediaElements.clear()
        window.__metastreamMediaElements = undefined
      }
    }, INIT_TIMEOUT)

    //=========================================================================
    // navigator.mediaSession proxy (Firefox)
    //=========================================================================

    if (isFirefox) {
      // stub out MediaSession API until Firefox supports this natively
      if (!navigator.mediaSession) {
        const noop = () =&gt; {}
        const mediaSessionStub = {
          __installedByMetastreamRemote__: true,
          setActionHandler: noop
        }
        Object.defineProperty(window.navigator, 'mediaSession', {
          value: mediaSessionStub,
          enumerable: false,
          writable: true
        })

        function MediaMetadata(metadata) {
          Object.assign(this, metadata)
        }
        window.MediaMetadata = MediaMetadata
      }

      const { mediaSession } = navigator

      // Capture action handlers for player.js proxy
      mediaSession._handlers = {}

      const _setActionHandler = mediaSession.setActionHandler
      mediaSession.setActionHandler = function(name, handler) {
        mediaSession._handlers[name] = handler
        _setActionHandler.apply(mediaSession, arguments)
      }
    }

    //=========================================================================
    // document.domain fix (Firefox)
    //=========================================================================

    if (isFirefox) {
      const domains = ['twitch.tv', 'crunchyroll.com']

      // Fix for setting document.domain in sandboxed iframe
      try {
        const { domain } = document
        if (domain &amp;&amp; domains.some(d =&gt; domain.includes(d))) {
          Object.defineProperty(document, 'domain', {
            value: domain,
            writable: true
          })
        }
      } catch (e) {}
    }

    //=========================================================================
    // Inline script embed prevention fix
    //=========================================================================

    const observeScripts = () =&gt; {
      const scriptSnippets = [
        { code: 'window.top !== window.self', replacement: 'false' },
        { code: 'self == top', replacement: 'true' },
        { code: 'top.location != window.location', replacement: 'false' }
      ]

      const getAddedScripts = mutationList =&gt;
        mutationList.reduce((scripts, mutation) =&gt; {
          if (mutation.type !== 'childList') return scripts
          const inlineScripts = Array.from(mutation.addedNodes).filter(
            node =&gt; node instanceof HTMLScriptElement &amp;&amp; node.innerHTML.length &gt; 0
          )
          return inlineScripts.length &gt; 0 ? [...scripts, ...inlineScripts] : scripts
        }, [])

      // Modifies inline scripts to allow embedding content in iframe
      const inlineScriptModifier = mutationsList =&gt; {
        const scripts = getAddedScripts(mutationsList)
        for (let script of scripts) {
          for (let snippet of scriptSnippets) {
            if (script.innerHTML.includes(snippet.code)) {
              script.innerHTML = script.innerHTML.split(snippet.code).join(snippet.replacement)
            }
          }
        }
      }

      const observer = new MutationObserver(inlineScriptModifier)
      observer.observe(document.documentElement, { childList: true, subtree: true })

      // Stop watching for changes after we finish loading
      window.addEventListener('load', () =&gt; observer.disconnect())
    }

    observeScripts()
  }());</script><g id="Valve-Pipes-Industry-Water-Gas_Pipe" data-name="Valve-Pipes-Industry-Water-Gas Pipe"><path d="m62 39h-9.14a3.983 3.983 0 0 0 -7.72 0h-4.14v-3.14a3.993 3.993 0 0 0 -1-7.86h-2v-5a1 1 0 0 0 -1-1h-1v-4h1a1 1 0 0 0 1-1v-3h8a4 4 0 1 0 -3.44-6h-7.12a3.958 3.958 0 0 0 -6.88 0h-7.12a3.991 3.991 0 1 0 -3.44 6h8v3a1 1 0 0 0 1 1h1v4h-1a1 1 0 0 0 -1 1v5h-2a3.993 3.993 0 0 0 -1 7.86v3.14h-4.14a3.983 3.983 0 0 0 -7.72 0h-9.14a1 1 0 0 0 -1 1v14a1 1 0 0 0 1 1h9.14a3.983 3.983 0 0 0 7.72 0h4.95c.93.36 5.32 2 8.19 2s7.26-1.64 8.19-2h4.95a3.983 3.983 0 0 0 7.72 0h9.14a1 1 0 0 0 1-1v-14a1 1 0 0 0 -1-1zm-16-31a2 2 0 1 1 -2 2 2.006 2.006 0 0 1 2-2zm-28 4a2 2 0 1 1 2-2 2.006 2.006 0 0 1 -2 2zm-7 41h-8v-12h8zm6 1a2 2 0 0 1 -4 0v-14a2 2 0 0 1 4 0zm6-1h-4v-12h4zm13-43h6a3.906 3.906 0 0 0 .56 2h-7.12a3.906 3.906 0 0 0 .56-2zm-4-2a2 2 0 1 1 -2 2 2.006 2.006 0 0 1 2-2zm4 6v2h-8v-2zm-2 4v4h-4v-4zm-12.56-6a3.906 3.906 0 0 0 .56-2h6a3.906 3.906 0 0 0 .56 2zm6.56 12h8v4h-8zm11 29.31a25.125 25.125 0 0 1 -7 1.69 25.213 25.213 0 0 1 -7-1.69v-17.31h14zm1-19.31h-16a2 2 0 0 1 0-4h16a2 2 0 0 1 0 4zm5 19h-4v-12h4zm6 1a2 2 0 0 1 -4 0v-14a2 2 0 0 1 4 0zm10-1h-8v-12h8z" data-original="#000000" class="active-path" fill="#FFFFFF"/><path d="m5 43h2v2h-2z" data-original="#000000" class="active-path" fill="#FFFFFF"/><path d="m55 43h4v2h-4z" data-original="#000000" class="active-path" fill="#FFFFFF"/><path d="m32 51a11.325 11.325 0 0 1 -4.556-.9l-.891 1.8a13.128 13.128 0 0 0 5.447 1.1 13.128 13.128 0 0 0 5.447-1.1l-.894-1.79a11.113 11.113 0 0 1 -4.553.89z" data-original="#000000" class="active-path" fill="#FFFFFF"/></g></g> </svg>
