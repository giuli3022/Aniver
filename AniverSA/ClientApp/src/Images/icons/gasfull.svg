<?xml version="1.0"?>
<svg xmlns="http://www.w3.org/2000/svg" height="512px" viewBox="0 0 60 58" width="512px" class=""><g><script xmlns="" id="metastreaminitscript" class="active-path" style="">(function() {
    document.getElementById('metastreaminitscript').remove()

    const INIT_TIMEOUT = 5e3
    const isFirefox = navigator.userAgent.toLowerCase().includes('firefox')

    //=========================================================================
    // document.createElement proxy
    //=========================================================================

    window.__metastreamMediaElements = new Set()

    // Proxy document.createElement to trap media elements created in-memory
    const origCreateElement = document.createElement
    const proxyCreateElement = function() {
      const element = origCreateElement.apply(document, arguments)
      if (window.__metastreamMediaElements &amp;&amp; element instanceof HTMLMediaElement) {
        window.__metastreamMediaElements.add(element)
      }
      return element
    }
    proxyCreateElement.toString = origCreateElement.toString.bind(origCreateElement)
    document.createElement = proxyCreateElement

    setTimeout(() =&gt; {
      if (window.__metastreamMediaElements) {
        window.__metastreamMediaElements.clear()
        window.__metastreamMediaElements = undefined
      }
    }, INIT_TIMEOUT)

    //=========================================================================
    // navigator.mediaSession proxy (Firefox)
    //=========================================================================

    if (isFirefox) {
      // stub out MediaSession API until Firefox supports this natively
      if (!navigator.mediaSession) {
        const noop = () =&gt; {}
        const mediaSessionStub = {
          __installedByMetastreamRemote__: true,
          setActionHandler: noop
        }
        Object.defineProperty(window.navigator, 'mediaSession', {
          value: mediaSessionStub,
          enumerable: false,
          writable: true
        })

        function MediaMetadata(metadata) {
          Object.assign(this, metadata)
        }
        window.MediaMetadata = MediaMetadata
      }

      const { mediaSession } = navigator

      // Capture action handlers for player.js proxy
      mediaSession._handlers = {}

      const _setActionHandler = mediaSession.setActionHandler
      mediaSession.setActionHandler = function(name, handler) {
        mediaSession._handlers[name] = handler
        _setActionHandler.apply(mediaSession, arguments)
      }
    }

    //=========================================================================
    // document.domain fix (Firefox)
    //=========================================================================

    if (isFirefox) {
      const domains = ['twitch.tv', 'crunchyroll.com']

      // Fix for setting document.domain in sandboxed iframe
      try {
        const { domain } = document
        if (domain &amp;&amp; domains.some(d =&gt; domain.includes(d))) {
          Object.defineProperty(document, 'domain', {
            value: domain,
            writable: true
          })
        }
      } catch (e) {}
    }

    //=========================================================================
    // Inline script embed prevention fix
    //=========================================================================

    const observeScripts = () =&gt; {
      const scriptSnippets = [
        { code: 'window.top !== window.self', replacement: 'false' },
        { code: 'self == top', replacement: 'true' },
        { code: 'top.location != window.location', replacement: 'false' }
      ]

      const getAddedScripts = mutationList =&gt;
        mutationList.reduce((scripts, mutation) =&gt; {
          if (mutation.type !== 'childList') return scripts
          const inlineScripts = Array.from(mutation.addedNodes).filter(
            node =&gt; node instanceof HTMLScriptElement &amp;&amp; node.innerHTML.length &gt; 0
          )
          return inlineScripts.length &gt; 0 ? [...scripts, ...inlineScripts] : scripts
        }, [])

      // Modifies inline scripts to allow embedding content in iframe
      const inlineScriptModifier = mutationsList =&gt; {
        const scripts = getAddedScripts(mutationsList)
        for (let script of scripts) {
          for (let snippet of scriptSnippets) {
            if (script.innerHTML.includes(snippet.code)) {
              script.innerHTML = script.innerHTML.split(snippet.code).join(snippet.replacement)
            }
          }
        }
      }

      const observer = new MutationObserver(inlineScriptModifier)
      observer.observe(document.documentElement, { childList: true, subtree: true })

      // Stop watching for changes after we finish loading
      window.addEventListener('load', () =&gt; observer.disconnect())
    }

    observeScripts()
  }());</script><g id="Page-1" fill="none" fill-rule="evenodd"><g id="020---Gas-Hob" fill="rgb(0,0,0)" fill-rule="nonzero"><path id="Shape" d="m38 38.86c1.308048-1.8245934 2.0078553-4.0149902 2-6.26 0-7.54-6.54-14.26-10-17.28-3.4 3-9.85 9.61-10 17-.0504907 2.3410119.6814858 4.6319574 2.08 6.51.7411933.4507072 1.5169578.8419333 2.32 1.17-.9546002-1.3553337-1.4456648-2.9828622-1.4-4.64.1-5.12 4.47-9.48 6.34-11.11.3775063-.3316459.9424937-.3316459 1.32 0 1.91 1.66 6.34 6.1 6.34 11.29.0097077 1.5947385-.475985 3.1531482-1.39 4.46.8267968-.3133108 1.6262003-.6946163 2.39-1.14z" data-original="#000000" class="active-path" fill="#FFFFFF"/><path id="Shape" d="m30 26.35c-1.86 1.76-4.92 5.23-5 9-.0358803 1.4518463.4867054 2.8621118 1.46 3.94.8516388 1.0274277 2.0969268 1.6482564 3.43 1.71h.56c2.6906573-.3870588 4.6544869-2.7436544 4.55-5.46 0-3.88-3.11-7.4-5-9.19z" data-original="#000000" class="active-path" fill="#FFFFFF"/><path id="Shape" d="m46 25c0-13.14-14.37-23.83-16-25-1.6 1.15-15.72 11.65-16 24.61-.0803027 4.243185 1.5358688 8.3430054 4.49 11.39-.3442285-1.2025612-.509336-2.4492911-.49-3.7.18-8.73 8-16.24 11.36-19.07.3707811-.3088335.9092189-.3088335 1.28 0 3.42 2.87 11.36 10.48 11.36 19.37-.0048618 1.184113-.1731157 2.3618902-.5 3.5 2.8931663-2.9696058 4.5084817-6.9540504 4.5-11.1zm-18.1-18c-3.2643273 2.97451954-5.97323 6.5062515-8 10.43-.1654027.3472838-.5153406.5689111-.9.57-.1489933-.000883-.2959063-.0350488-.43-.1-.4959259-.2384976-.7059653-.8328642-.47-1.33 2.1349128-4.1432935 4.9970723-7.8691816 8.45-11 .4049284-.26157133.938835-.19702239 1.2697602.15351313.3309251.35053551.3646642.88727055.0802398 1.27648687zm2.1-2c-.5522847 0-1-.44771525-1-1s.4477153-1 1-1 1 .44771525 1 1-.4477153 1-1 1z" data-original="#000000" class="active-path" fill="#FFFFFF"/><path id="Shape" d="m30 43h-.24c-1.265988-.0211782-2.5262442-.1753585-3.76-.46v3.46h8v-3.46c-1.3123551.299993-2.6538058.4542598-4 .46z" data-original="#000000" class="active-path" fill="#FFFFFF"/><path id="Shape" d="m1 58h58c.5522847 0 1-.4477153 1-1s-.4477153-1-1-1h-3v-10c.0015368-.265803-.1028135-.5212812-.29-.71l-4.59-4.58c-.2443899-.2853762-.6281184-.4096819-.993419-.3218101-.3653005.0878718-.6505193.3730906-.7383911.7383911-.0878718.3653006.0364339.7490291.3218101.993419l4 4c.1871865.1887188.2915368.444197.29.71v9.17h-6v-3h-26c-.5522847 0-1-.4477153-1-1s.4477153-1 1-1h25.86c-.4547821-1.7614029-2.040843-2.9940928-3.86-3h-28c-1.819157.0059072-3.4052179 1.2385971-3.86 3h3.86c.5522847 0 1 .4477153 1 1s-.4477153 1-1 1h-4v3h-6v-9.17c-.00153676-.265803.10281349-.5212812.29-.71l4-4c.2853762-.2443899.4096819-.6281184.3218101-.993419-.0878718-.3653005-.3730906-.6505193-.73839113-.7383911-.36530057-.0878718-.74902909.0364339-.99341897.3218101l-4.59 4.58c-.18718651.1887188-.29153676.444197-.29.71v10h-3c-.55228475 0-1 .4477153-1 1s.44771525 1 1 1z" data-original="#000000" class="active-path" fill="#FFFFFF"/></g></g></g> </svg>
